name: build

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.rst'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.rst'

env:
  PREREQS_ENV: ${{github.workspace}}/prereqs.sh
  SPARK_ENV: ${{github.workspace}}/spark_env.sh
  HADOOP_ENV: ${{github.workspace}}/hadoop_env.sh
  PREREQS_INSTALL_DIR: ${{github.workspace}}/prereqs
  CMAKE_INSTALL_PREFIX: ${{github.workspace}}/install
  GENOMICSDB_BUILD_DIR: ${{github.workspace}}/build
  GENOMICSDB_RELEASE_VERSION: x.y.z.test
  HADOOP_VER: 3.2.1
  SPARK_VER: 3.0.1
  SPARK_LOCAL_IP: 127.0.0.1
  SPARK_HADOOP_VER: 2.7

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-18.04,macos-10.15]
        type: [basic]
        java: [8,11]
        include:
          - os: ubuntu-18.04
            type: hdfs
            java: 8
          - os: ubuntu-18.04
            type: hdfs
            java: 11

    env: 
      OS_TYPE: ${{matrix.os}} 
      JAVA_VER: ${{matrix.java}}
      JAVA_LINUX: /usr/lib/jvm/java-1.${{matrix.java}}.0-openjdk-amd64/
      
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: 3.6

    - uses: actions/setup-java@v1
      if:  startsWith(matrix.os, 'macos')
      with: 
        java-version: ${{matrix.java}}

    - name: Install Java, set path
      if: startsWith(matrix.os, 'ubuntu')
      shell: bash
      run: | 
        sudo add-apt-repository -y ppa:openjdk-r/ppa
        sudo apt update -qq
        sudo apt install -yq openjdk-${{matrix.java}}-jdk
        echo $JAVA_LINUX/bin >> $GITHUB_PATH

    - name: Cache built prerequisites
      uses: actions/cache@v2
      with:
        path: |
          ${{env.PREREQS_INSTALL_DIR}}
           ~/.m2/repository
          ~/awssdk-install
          ~/gcssdk-install
        key: ${{matrix.os}}-cache-prereqs-v2

    # TODO: See https://github.com/actions/cache/pull/285 using platform-indepenedent "pip cache dir"
    - name: Cache Python artifacts for Ubuntu 
      uses: actions/cache@v2
      if: startsWith(matrix.os, 'ubuntu')
      with:
        path: ~/.cache/pip
        key: ${{matrix.os}}-pip-${{matrix.python-version}}-v1

    - name: Cache Python artifacts for MacOS
      uses: actions/cache@v2
      if: startsWith(matrix.os, 'macos')
      with:
        path: ~/Library/Caches/pip
        key: ${{matrix.os}}-pip-${{matrix.python-version}}-v1

    - name: Cache Distributed FileSystems
      if: matrix.type == 'hdfs'
      uses: actions/cache@v2
      with:
        path: ${{runner.workspace}}/hadoop-${{env.HADOOP_VER}}
        key: dfs-${{env.HADOOP_VER}}-v2

    - name: Install Prerequisites
      shell: bash
      working-directory: ${{github.workspace}}/scripts/prereqs
      run: |
        echo "matrix.os = ${{matrix.os}}"
        if [[ ${{matrix.os}} == macos* ]]; then
          echo "Installing Prerequistes for MacOS..."
          INSTALL_PREFIX=$PREREQS_INSTALL_DIR PREREQS_ENV=$PREREQS_ENV ./install_prereqs.sh true
        else
          echo "Install Prerequisites for Linux.."
          sudo INSTALL_PREFIX=$PREREQS_INSTALL_DIR PREREQS_ENV=$PREREQS_ENV ./install_prereqs.sh
        fi
        echo "cat prereqs env..."
        cat $PREREQS_ENV
        echo "cat prereqs env DONE"

    - name: Install spark and hadoop dependencies
      if: matrix.type == 'hdfs'
      shell: bash
      working-directory:  ${{github.workspace}}
      run: |
        source $GITHUB_WORKSPACE/.github/scripts/install_hadoop.sh
        JAVA_HOME=$JAVA_LINUX SPARK_ENV=$SPARK_ENV source $GITHUB_WORKSPACE/.github/scripts/install_spark.sh
      env:
        INSTALL_DIR: ${{runner.workspace}}

    - name: Create Build Directory
      shell: bash
      run: mkdir -p $GENOMICSDB_BUILD_DIR

    - name: Configure CMake Build ubuntu
      shell: bash
      if: startsWith(matrix.os, 'ubuntu')
      working-directory: ${{env.GENOMICSDB_BUILD_DIR}}
      run: |
        if [[ $JAVA_VER == '11' ]]; then
          GENOMICSDB_MAVEN_PROFILE=java11
        fi
        source $PREREQS_ENV
        JAVA_HOME=$JAVA_LINUX
        echo $JAVA_LINUX/bin >> $GITHUB_PATH
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX -DCMAKE_PREFIX_PATH=$PREREQS_INSTALL_DIR -DGENOMICSDB_RELEASE_VERSION=$GENOMICSDB_RELEASE_VERSION -DBUILD_JAVA=1 -DGENOMICSDB_MAVEN_PROFILE=$GENOMICSDB_MAVEN_PROFILE

    - name: Configure CMake Build macos 
      shell: bash
      if: startsWith(matrix.os, 'macos')
      working-directory: ${{env.GENOMICSDB_BUILD_DIR}}
      run: |
        if [[ $JAVA_VER == '11' ]]; then
          GENOMICSDB_MAVEN_PROFILE=java11
        fi
        source $PREREQS_ENV
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=$CMAKE_INSTALL_PREFIX -DCMAKE_PREFIX_PATH=$PREREQS_INSTALL_DIR -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DGENOMICSDB_RELEASE_VERSION=$GENOMICSDB_RELEASE_VERSION -DBUILD_JAVA=1 -DGENOMICSDB_MAVEN_PROFILE=$GENOMICSDB_MAVEN_PROFILE
    
    - name: Build
      working-directory: ${{env.GENOMICSDB_BUILD_DIR}}
      shell: bash
      run: |
        if [[ $OS_TYPE == 'ubuntu-18.04' ]]; then
          export JAVA_HOME=$JAVA_LINUX
          echo $JAVA_LINUX/bin >> $GITHUB_PATH
        fi
        source $PREREQS_ENV
        if [[ $OS_TYPE == macos* ]]; then
          export OPENSSL_ROOT_DIR=/usr/local/opt/openssl
        fi
        make -j4
        make install

    - name: Test
      shell: bash
      working-directory: ${{env.GENOMICSDB_BUILD_DIR}}
      if: matrix.type == 'basic'
      run: |
        if [[ $OS_TYPE == 'ubuntu-18.04' ]]; then
          export JAVA_HOME=$JAVA_LINUX
          echo $JAVA_LINUX/bin >> $GITHUB_PATH
        fi
        python -m pip install --upgrade pip
        python -m pip install jsondiff
        make test ARGS=-V

    - name: Test - Distributed FileSystems
      if: matrix.type == 'hdfs'
      shell: bash
      working-directory:  ${{github.workspace}}
      run: |
        JAVA_HOME=$JAVA_LINUX
        source $SPARK_ENV
        python -m pip install --upgrade pip
        python -m pip install jsondiff
        echo "Nalini hostname=$(hostname)"
        echo "Print /etc/hosts"
        cat /etc/hosts
        sudo sed -i '/127.0.0.1/d' /etc/hosts
        echo "Print 1 /etc/hosts"
        cat /etc/hosts
        echo "Starting setup for $(hostname)" && sudo sed -i "1 i\127.0.0.1 localhost $(hostname)" /etc/hosts
        echo "Print 2 /etc/hosts"
        cat /etc/hosts
        echo "Nalini 1 hostname=$(hostname)"
        echo "Nalini Debug DONE"
        python tests/run_spark_hdfs.py $GENOMICSDB_BUILD_DIR $CMAKE_INSTALL_PREFIX local hdfs://localhost:9000/ client $GENOMICSDB_RELEASE_VERSION $GITHUB_WORKSPACE/tests Coverage
        $GITHUB_WORKSPACE/.github/scripts/test_hdfs_htslib_support.sh

    - name: Upload Coverage to CodeCov
      uses: codecov/codecov-action@v1
