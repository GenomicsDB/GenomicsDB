sudo: required
dist: trusty

language: python
python: "3.4"

services:
    - postgresql

env:
    global:
        - LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/dependencies/libcsv/.libs
        - JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
        - GENOMICSDB_BUILD_DIR=$TRAVIS_BUILD_DIR/build
        - GENOMICSDB_INSTALL_DIR=$GENOMICSDB_BUILD_DIR/install
        - PATH=$GENOMICSDB_INSTALL_DIR/bin:$TRAVIS_BUILD_DIR/bin:$PATH
        - GENOMICSDB_RELEASE_VERSION=0.9.2
        - CLASSPATH=$GENOMICSDB_INSTALL_DIR/bin/genomicsdb-${GENOMICSDB_RELEASE_VERSION}-jar-with-dependencies.jar:$GENOMICSDB_BUILD_DIR/target/genomicsdb-${GENOMICSDB_RELEASE_VERSION}-examples.jar:.

matrix:
    include:
      - name: "Basic build Linux"
        os: linux

      - name: "Basic build OSX"
        os: osx
        language: generic
        env: TOXENV=py34

      - name: "Spark/HDFS support"
        os: linux
        env: SPARK_HDFS_SUPPORT=true

before_install:
    - if [[ $TRAVIS_OS_NAME == osx ]]; then brew update; fi
    - if [[ $TRAVIS_OS_NAME == osx ]]; then brew list python &>/dev/null || brew install python; fi
    - if [[ $TRAVIS_OS_NAME == osx ]]; then brew list python3 &>/dev/null || brew install python3; fi

install:
    # Install dependencies
    - pip install -r requirements.txt
    - sudo pip2 install jsondiff
    - if [[ $TRAVIS_OS_NAME == linux ]]; then
        sudo apt-get -y install lcov mpich zlib1g-dev libssl-dev rsync cmake uuid-dev libcurl4-openssl-dev;
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y;
        sudo add-apt-repository -y ppa:openjdk-r/ppa;
        sudo apt-get update -q;
        sudo apt-get install gcc-4.9 -y;
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60;
        sudo apt-get install g++-4.9 -y;
        sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 60;
        sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-4.9 60;
        sudo apt-get install libdbi-dev libdbd-pgsql -y;
        sudo apt-get -y install openjdk-8-jdk icedtea-plugin;
        sudo apt-get -y install zip unzip;
        wget -nv https://github.com/Intel-HLS/GenomicsDB/releases/download/0.4.0/protobuf-3.0.2-trusty.tar.gz -O protobuf-3.0.2-trusty.tar.gz;
        tar xzf protobuf-3.0.2-trusty.tar.gz && sudo rsync -a protobuf-3.0.2-trusty/ /usr/;
        sudo apt-get -y install libgtest-dev;
        cd /usr/src/gtest;
        sudo cmake . -DBUILD_SHARED_LIBS=1;
        sudo make;
        sudo mv libgtest* /usr/lib;
        cd $TRAVIS_BUILD_DIR;
        cd dependencies && git clone https://github.com/rgamble/libcsv && cd libcsv && ./configure && make;
        jdk_switcher use openjdk8;
      elif [[ $TRAVIS_OS_NAME == osx ]]; then
        export PG_DATA=$(brew --prefix)/var/postgres;
        pg_ctl -w start -l postgres.log --pgdata ${PG_DATA};
        createuser -s postgres;
        brew upgrade cmake;
        brew install lcov mpich openssl ossp-uuid protobuf@3.1 libcsv;
        export OPENSSL_ROOT_DIR=/usr/local/opt/openssl;
        cd $TRAVIS_BUILD_DIR/dependencies;
        wget -nv https://github.com/google/googletest/archive/release-1.8.1.tar.gz;
        tar -xzf release-1.8.1.tar.gz;
        cd googletest-release-1.8.1/googletest && cmake . -DBUILD_SHARED_LIBS=1 && make && cp libgtest* /usr/local/lib && cp -r include/gtest /usr/local/include;
        ls $TRAVIS_BUILD_DIR/dependencies/googletest-release-1.8.1/googletest/;
        JAVA_HOME=$(/usr/libexec/java_home);
      fi
    - echo $JAVA_HOME
    - export PATH=$JAVA_HOME/bin:$PATH
    - which javac && javac -version
    - which java && java -version
    # install spark/hdfs/scala 
    - cd $TRAVIS_BUILD_DIR
    - if [[ $SPARK_HDFS_SUPPORT == true ]]; then
        wget -nv https://downloads.lightbend.com/scala/2.11.8/scala-2.11.8.deb;
        sudo dpkg -i scala-2.11.8.deb;
        source $TRAVIS_BUILD_DIR/.travis/scripts/install_hadoop.sh;
        source $TRAVIS_BUILD_DIR/.travis/scripts/install_spark.sh;
      fi

    - cd $TRAVIS_BUILD_DIR
    - mkdir -p $GENOMICSDB_BUILD_DIR
    # get jacoco
    - wget https://github.com/jacoco/jacoco/releases/download/v0.8.2/jacoco-0.8.2.zip
    - unzip -j jacoco-0.8.2.zip lib/jacocoagent.jar lib/jacococli.jar -d $GENOMICSDB_BUILD_DIR

before_script:
    - cd $GENOMICSDB_BUILD_DIR
    # Reset line coverage
    - lcov --directory . --zerocounters
    - psql -U postgres -c 'create database gendb'
    - psql -U postgres gendb < $TRAVIS_BUILD_DIR/src/resources/gendb_state_for_tests.txt
    - psql gendb -U postgres -c 'select count(*) from reference'

script:
    #- pylint $TRAVIS_BUILD_DIR/docker/vcf_combiner/usr/bin/combine_vcf.py
    - pytest $TRAVIS_BUILD_DIR/docker/vcf_combiner/usr/bin/combine_vcf.py
    - cd $GENOMICSDB_BUILD_DIR
    - if [[ $TRAVIS_OS_NAME == linux ]]; then
        cmake $TRAVIS_BUILD_DIR -DBUILD_JAVA=1 -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_INSTALL_PREFIX=$GENOMICSDB_INSTALL_DIR -DLIBCSV_DIR=$TRAVIS_BUILD_DIR/dependencies/libcsv -DGENOMICSDB_RELEASE_VERSION=$GENOMICSDB_RELEASE_VERSION -DMAVEN_QUIET=True -DENABLE_LIBCURL=True;
      elif [[ $TRAVIS_OS_NAME == osx ]]; then
        cmake $TRAVIS_BUILD_DIR -DBUILD_JAVA=1 -DCMAKE_FIND_FRAMEWORK=LAST -DCMAKE_BUILD_TYPE=Coverage -DCMAKE_INSTALL_PREFIX=$GENOMICSDB_INSTALL_DIR -DLIBCSV_DIR=$TRAVIS_BUILD_DIR/dependencies/libcsv -DGENOMICSDB_RELEASE_VERSION=$GENOMICSDB_RELEASE_VERSION -DMAVEN_QUIET=True -DENABLE_LIBCURL=True -DPROTOBUF_REGENERATE=True -DPROTOBUF_LIBRARY=/usr/local/opt/protobuf@3.1/lib/libprotobuf.so -DPROTOBUF_INCLUDE_DIRS=/usr/local/opt/protobuf@3.1/include -DPROTOBUF_LIBRARY_DEBUG=/usr/local/opt/protobuf@3.1/lib/libprotobuf.so -DPROTOBUF_LITE_LIBRARY=/usr/local/opt/protobuf@3.1/lib/libprotobuf-lite.so -DPROTOBUF_PROTOC_EXECUTABLE=/usr/local/opt/protobuf@3.1/bin/protoc -DPROTOBUF_PROTOC_LIBRARY=/usr/local/opt/protobuf@3.1/lib/libprotoc.so -DPROTOBUF_LIBRARIES=/usr/local/opt/protobuf@3.1/lib/libprotobuf.a -DGTEST_ROOT=$TRAVIS_BUILD_DIR/dependencies/googletest-release-1.8.1/googletest -DOPENSSL_PREFIX_DIR=/usr/local/opt/openssl;
      fi
    - ln -s $TRAVIS_BUILD_DIR/tests
    - make -j 4 && make install
    - if [[ $SPARK_HDFS_SUPPORT == true ]]; then
       echo "Run spark/hdfs tests";
       /usr/local/spark/sbin/start-master.sh;
       /usr/local/spark/sbin/start-slaves.sh;
       python2 $TRAVIS_BUILD_DIR/tests/run_spark_hdfs.py $GENOMICSDB_BUILD_DIR $GENOMICSDB_INSTALL_DIR local hdfs://localhost:9000/ client $GENOMICSDB_RELEASE_VERSION $TRAVIS_BUILD_DIR/tests;
      else
        make test ARGS=-V;
      fi

after_success:
    - cd $GENOMICSDB_BUILD_DIR
    - lcov --directory . --capture --output-file coverage.info
    # Remove protocol buffer generated files from the coverage information
    - lcov --remove coverage.info '/opt*' '/usr*' '*/dependencies/*' '*/src/test*' '*.pb.h' '*.pb.cc' -o coverage.info
    - lcov --list coverage.info
    # Uploading report to CodeCov
    - cd $GENOMICSDB_INSTALL_DIR && bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
